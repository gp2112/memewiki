--
-- PostgreSQL database dump
--

-- Dumped from database version 14.3
-- Dumped by pg_dump version 14.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: avaliameme; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.avaliameme (
    idmeme integer NOT NULL,
    idusuario integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    nota double precision NOT NULL
);


ALTER TABLE public.avaliameme OWNER TO postgres;

--
-- Name: banusuario; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.banusuario (
    idmod integer NOT NULL,
    idusuariobanido integer NOT NULL,
    datahora timestamp without time zone NOT NULL
);


ALTER TABLE public.banusuario OWNER TO postgres;

--
-- Name: comentariomeme; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comentariomeme (
    idmeme integer NOT NULL,
    datahoracomentario timestamp without time zone NOT NULL,
    idusuariopublicou integer NOT NULL,
    texto character varying(500) NOT NULL,
    idmidia integer NOT NULL
);


ALTER TABLE public.comentariomeme OWNER TO postgres;

--
-- Name: comentariomemebase; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comentariomemebase (
    idusuario integer NOT NULL,
    idmemebase integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    texto character varying(500),
    idmidia integer
);


ALTER TABLE public.comentariomemebase OWNER TO postgres;

--
-- Name: comentarionoticia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.comentarionoticia (
    idnoticia integer NOT NULL,
    idusuario integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    texto character varying(500),
    idmidia integer
);


ALTER TABLE public.comentarionoticia OWNER TO postgres;

--
-- Name: compoememebase; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.compoememebase (
    idmemebase integer NOT NULL,
    idmeme integer NOT NULL
);


ALTER TABLE public.compoememebase OWNER TO postgres;

--
-- Name: edicaomemebase; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.edicaomemebase (
    idusuario integer NOT NULL,
    idmemebase integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    conteudoanterior character varying(500) NOT NULL
);


ALTER TABLE public.edicaomemebase OWNER TO postgres;

--
-- Name: meme; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.meme (
    id integer NOT NULL,
    idusuario integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    idmidia integer NOT NULL,
    mediaavaliacoes double precision,
    numeroavaliacoes integer
);


ALTER TABLE public.meme OWNER TO postgres;

--
-- Name: memebase; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.memebase (
    id integer NOT NULL,
    titulo character varying(40) NOT NULL,
    thumb integer NOT NULL,
    datahorapublicacao timestamp without time zone NOT NULL,
    datahoraedicao timestamp without time zone,
    usuarioedicao integer,
    richtext character varying(500) NOT NULL,
    idusuariopublicou integer NOT NULL
);


ALTER TABLE public.memebase OWNER TO postgres;

--
-- Name: memebasemidia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.memebasemidia (
    idmidia integer NOT NULL,
    idmemebase integer NOT NULL,
    label character varying(30) NOT NULL
);


ALTER TABLE public.memebasemidia OWNER TO postgres;

--
-- Name: memebasetags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.memebasetags (
    idmemebase integer NOT NULL,
    tag integer NOT NULL
);


ALTER TABLE public.memebasetags OWNER TO postgres;

--
-- Name: memetags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.memetags (
    idmeme integer NOT NULL,
    tag integer NOT NULL
);


ALTER TABLE public.memetags OWNER TO postgres;

--
-- Name: midia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.midia (
    id integer DEFAULT nextval(('midia_id_seq'::text)::regclass) NOT NULL,
    formato character varying NOT NULL,
    url character varying(255) NOT NULL
);


ALTER TABLE public.midia OWNER TO postgres;

--
-- Name: midia_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.midia_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.midia_id_seq OWNER TO postgres;

--
-- Name: noticia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.noticia (
    id integer NOT NULL,
    titulo character varying(50) NOT NULL,
    datahora timestamp without time zone NOT NULL,
    idusuariopublicou integer NOT NULL,
    subtitulo character varying(50),
    thumb integer,
    datahoraedicao timestamp without time zone,
    richtext character varying(500) NOT NULL
);


ALTER TABLE public.noticia OWNER TO postgres;

--
-- Name: noticiamidia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.noticiamidia (
    idmidia integer NOT NULL,
    idnoticia integer NOT NULL,
    label character varying(30) NOT NULL
);


ALTER TABLE public.noticiamidia OWNER TO postgres;

--
-- Name: noticiatags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.noticiatags (
    idnoticia integer NOT NULL,
    tag integer NOT NULL
);


ALTER TABLE public.noticiatags OWNER TO postgres;

--
-- Name: removememe; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.removememe (
    idmod integer NOT NULL,
    idmeme integer NOT NULL,
    datahora timestamp without time zone NOT NULL
);


ALTER TABLE public.removememe OWNER TO postgres;

--
-- Name: removememebase; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.removememebase (
    idmod integer NOT NULL,
    idmemebase integer NOT NULL,
    datahora timestamp without time zone NOT NULL
);


ALTER TABLE public.removememebase OWNER TO postgres;

--
-- Name: removenoticia; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.removenoticia (
    idmod integer NOT NULL,
    idnoticia integer NOT NULL,
    datahora timestamp without time zone NOT NULL
);


ALTER TABLE public.removenoticia OWNER TO postgres;

--
-- Name: removethread; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.removethread (
    idmod integer NOT NULL,
    idthread integer NOT NULL,
    datahora timestamp without time zone NOT NULL
);


ALTER TABLE public.removethread OWNER TO postgres;

--
-- Name: thread; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.thread (
    id integer DEFAULT nextval(('thread_id_seq'::text)::regclass) NOT NULL,
    idusuario integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    titulo character varying(50) NOT NULL,
    descricao character varying(500),
    idmidia integer
);


ALTER TABLE public.thread OWNER TO postgres;

--
-- Name: thread_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.thread_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.thread_id_seq OWNER TO postgres;

--
-- Name: threadcomentario; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.threadcomentario (
    idusuario integer NOT NULL,
    idthread integer NOT NULL,
    datahora timestamp without time zone NOT NULL,
    texto character varying(500),
    idmidia integer
);


ALTER TABLE public.threadcomentario OWNER TO postgres;

--
-- Name: threadtags; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.threadtags (
    idthread integer NOT NULL,
    tag character varying(50) NOT NULL
);


ALTER TABLE public.threadtags OWNER TO postgres;

--
-- Name: usuario; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.usuario (
    id integer DEFAULT nextval(('usuario_id_seq'::text)::regclass) NOT NULL,
    email character varying(40) NOT NULL,
    senha character varying(255) NOT NULL,
    nome character varying(40) NOT NULL,
    datahoracadastro timestamp without time zone NOT NULL,
    datanascimento timestamp without time zone NOT NULL,
    funcao character(10) NOT NULL,
    CONSTRAINT ck_usuario CHECK (((upper((funcao)::text) = 'JORNALISTA'::text) OR (upper((funcao)::text) = 'MODERADOR'::text) OR (upper((funcao)::text) = 'COMUM'::text)))
);


ALTER TABLE public.usuario OWNER TO postgres;

--
-- Name: usuario_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.usuario_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.usuario_id_seq OWNER TO postgres;

--
-- Data for Name: avaliameme; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.avaliameme (idmeme, idusuario, datahora, nota) FROM stdin;
\.


--
-- Data for Name: banusuario; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.banusuario (idmod, idusuariobanido, datahora) FROM stdin;
\.


--
-- Data for Name: comentariomeme; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.comentariomeme (idmeme, datahoracomentario, idusuariopublicou, texto, idmidia) FROM stdin;
\.


--
-- Data for Name: comentariomemebase; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.comentariomemebase (idusuario, idmemebase, datahora, texto, idmidia) FROM stdin;
\.


--
-- Data for Name: comentarionoticia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.comentarionoticia (idnoticia, idusuario, datahora, texto, idmidia) FROM stdin;
\.


--
-- Data for Name: compoememebase; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.compoememebase (idmemebase, idmeme) FROM stdin;
\.


--
-- Data for Name: edicaomemebase; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.edicaomemebase (idusuario, idmemebase, datahora, conteudoanterior) FROM stdin;
\.


--
-- Data for Name: meme; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.meme (id, idusuario, datahora, idmidia, mediaavaliacoes, numeroavaliacoes) FROM stdin;
\.


--
-- Data for Name: memebase; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.memebase (id, titulo, thumb, datahorapublicacao, datahoraedicao, usuarioedicao, richtext, idusuariopublicou) FROM stdin;
\.


--
-- Data for Name: memebasemidia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.memebasemidia (idmidia, idmemebase, label) FROM stdin;
\.


--
-- Data for Name: memebasetags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.memebasetags (idmemebase, tag) FROM stdin;
\.


--
-- Data for Name: memetags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.memetags (idmeme, tag) FROM stdin;
\.


--
-- Data for Name: midia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.midia (id, formato, url) FROM stdin;
1	jpg	https://yt3.ggpht.com/a/AATXAJw58RT6_v8A3_TBev9r5qoasXeRVu5k-aZLKA=s900-c-k-c0xffffffff-no-rj-mo
2	jpg	http://i.ytimg.com/vi/pbnuTYP2qJc/maxresdefault.jpg
\.


--
-- Data for Name: noticia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.noticia (id, titulo, datahora, idusuariopublicou, subtitulo, thumb, datahoraedicao, richtext) FROM stdin;
\.


--
-- Data for Name: noticiamidia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.noticiamidia (idmidia, idnoticia, label) FROM stdin;
\.


--
-- Data for Name: noticiatags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.noticiatags (idnoticia, tag) FROM stdin;
\.


--
-- Data for Name: removememe; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.removememe (idmod, idmeme, datahora) FROM stdin;
\.


--
-- Data for Name: removememebase; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.removememebase (idmod, idmemebase, datahora) FROM stdin;
\.


--
-- Data for Name: removenoticia; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.removenoticia (idmod, idnoticia, datahora) FROM stdin;
\.


--
-- Data for Name: removethread; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.removethread (idmod, idthread, datahora) FROM stdin;
\.


--
-- Data for Name: thread; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.thread (id, idusuario, datahora, titulo, descricao, idmidia) FROM stdin;
1	2	2011-09-23 00:00:00	Doge meme thread!!!	Aqui quero só foto do doge :)	1
2	1	2021-09-23 00:00:00	Aquela thread do nayan cat mexicano	Pq nayan cat mexicano eh brabo	2
\.


--
-- Data for Name: threadcomentario; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.threadcomentario (idusuario, idthread, datahora, texto, idmidia) FROM stdin;
\.


--
-- Data for Name: threadtags; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.threadtags (idthread, tag) FROM stdin;
\.


--
-- Data for Name: usuario; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.usuario (id, email, senha, nome, datahoracadastro, datanascimento, funcao) FROM stdin;
1	me@guip.dev	84e2a35c144e6a4f1aec107329cd47b6cae4abd3a03c6017845f2be580018dc9	gp2112	2022-06-30 03:02:01.684296	2011-09-23 00:00:00	comum     
2	garry@protonmail.ch	adc02ad9b1ed1bb24a1360f117089df4f56f84745e808e019dcf1add53eb1787	garry	2022-06-30 03:12:47.6413	2011-09-23 00:00:00	comum     
3	fulano@email.com	3db2c1a4023cf44ed32b926bb77f005b13cf2ac5688168ce5b07e2574d8e0e25	fulano123	2022-06-30 15:18:35.172758	2011-09-23 00:00:00	comum     
\.


--
-- Name: midia_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.midia_id_seq', 2, true);


--
-- Name: thread_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.thread_id_seq', 2, true);


--
-- Name: usuario_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.usuario_id_seq', 3, true);


--
-- Name: avaliameme pk_avaliameme; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.avaliameme
    ADD CONSTRAINT pk_avaliameme PRIMARY KEY (idmeme, idusuario);


--
-- Name: banusuario pk_banusuario; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banusuario
    ADD CONSTRAINT pk_banusuario PRIMARY KEY (idusuariobanido);


--
-- Name: comentariomeme pk_comentariomeme; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomeme
    ADD CONSTRAINT pk_comentariomeme PRIMARY KEY (idmeme, datahoracomentario, idusuariopublicou);


--
-- Name: comentariomemebase pk_comentariomemebase; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomemebase
    ADD CONSTRAINT pk_comentariomemebase PRIMARY KEY (idusuario, idmemebase, datahora);


--
-- Name: comentarionoticia pk_comentarionoticia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentarionoticia
    ADD CONSTRAINT pk_comentarionoticia PRIMARY KEY (idnoticia, idusuario, datahora);


--
-- Name: compoememebase pk_compoememebase; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compoememebase
    ADD CONSTRAINT pk_compoememebase PRIMARY KEY (idmemebase, idmeme);


--
-- Name: edicaomemebase pk_edicaomemebase; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edicaomemebase
    ADD CONSTRAINT pk_edicaomemebase PRIMARY KEY (idusuario, idmemebase, datahora);


--
-- Name: meme pk_meme; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.meme
    ADD CONSTRAINT pk_meme PRIMARY KEY (id);


--
-- Name: memebase pk_memebase; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebase
    ADD CONSTRAINT pk_memebase PRIMARY KEY (id);


--
-- Name: memebasemidia pk_memebasemidia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebasemidia
    ADD CONSTRAINT pk_memebasemidia PRIMARY KEY (idmidia);


--
-- Name: memebasetags pk_memebasetags; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebasetags
    ADD CONSTRAINT pk_memebasetags PRIMARY KEY (idmemebase, tag);


--
-- Name: memetags pk_memtags; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memetags
    ADD CONSTRAINT pk_memtags PRIMARY KEY (idmeme, tag);


--
-- Name: midia pk_midia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.midia
    ADD CONSTRAINT pk_midia PRIMARY KEY (id);


--
-- Name: noticia pk_noticia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticia
    ADD CONSTRAINT pk_noticia PRIMARY KEY (id);


--
-- Name: noticiamidia pk_noticiamidia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticiamidia
    ADD CONSTRAINT pk_noticiamidia PRIMARY KEY (idmidia);


--
-- Name: noticiatags pk_noticiatags; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticiatags
    ADD CONSTRAINT pk_noticiatags PRIMARY KEY (idnoticia, tag);


--
-- Name: removememe pk_removememe; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removememe
    ADD CONSTRAINT pk_removememe PRIMARY KEY (idmeme);


--
-- Name: thread pk_thread; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.thread
    ADD CONSTRAINT pk_thread PRIMARY KEY (id);


--
-- Name: threadcomentario pk_threadcomentario; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.threadcomentario
    ADD CONSTRAINT pk_threadcomentario PRIMARY KEY (idusuario, idthread, datahora);


--
-- Name: threadtags pk_threadtags; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.threadtags
    ADD CONSTRAINT pk_threadtags PRIMARY KEY (idthread);


--
-- Name: usuario pk_usuario; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuario
    ADD CONSTRAINT pk_usuario PRIMARY KEY (id);


--
-- Name: memebase un_memebase; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebase
    ADD CONSTRAINT un_memebase UNIQUE (titulo);


--
-- Name: usuario un_usuario; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuario
    ADD CONSTRAINT un_usuario UNIQUE (email);


--
-- Name: meme uq_meme; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.meme
    ADD CONSTRAINT uq_meme UNIQUE (idusuario, datahora);


--
-- Name: memebasemidia uq_memebasemidia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebasemidia
    ADD CONSTRAINT uq_memebasemidia UNIQUE (label);


--
-- Name: noticia uq_noticia; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticia
    ADD CONSTRAINT uq_noticia UNIQUE (titulo, datahora);


--
-- Name: noticiamidia uq_noticiamida; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticiamidia
    ADD CONSTRAINT uq_noticiamida UNIQUE (idnoticia, label);


--
-- Name: thread uq_thread; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.thread
    ADD CONSTRAINT uq_thread UNIQUE (idusuario, datahora);


--
-- Name: avaliameme fk1_avaliameme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.avaliameme
    ADD CONSTRAINT fk1_avaliameme FOREIGN KEY (idmeme) REFERENCES public.meme(id) ON DELETE CASCADE;


--
-- Name: banusuario fk1_banusuario; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banusuario
    ADD CONSTRAINT fk1_banusuario FOREIGN KEY (idmod) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: comentariomeme fk1_comentariomeme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomeme
    ADD CONSTRAINT fk1_comentariomeme FOREIGN KEY (idmeme) REFERENCES public.meme(id) ON DELETE CASCADE;


--
-- Name: comentariomemebase fk1_comentariomemebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomemebase
    ADD CONSTRAINT fk1_comentariomemebase FOREIGN KEY (idusuario) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: edicaomemebase fk1_comentariomemebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edicaomemebase
    ADD CONSTRAINT fk1_comentariomemebase FOREIGN KEY (idusuario) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: comentarionoticia fk1_comentarionoticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentarionoticia
    ADD CONSTRAINT fk1_comentarionoticia FOREIGN KEY (idnoticia) REFERENCES public.noticia(id) ON DELETE CASCADE;


--
-- Name: compoememebase fk1_compoememebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compoememebase
    ADD CONSTRAINT fk1_compoememebase FOREIGN KEY (idmemebase) REFERENCES public.memebase(id) ON DELETE CASCADE;


--
-- Name: meme fk1_meme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.meme
    ADD CONSTRAINT fk1_meme FOREIGN KEY (idusuario) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: memebase fk1_memebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebase
    ADD CONSTRAINT fk1_memebase FOREIGN KEY (thumb) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: memebasemidia fk1_memebasemidia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebasemidia
    ADD CONSTRAINT fk1_memebasemidia FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: memebasetags fk1_memebasetags; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebasetags
    ADD CONSTRAINT fk1_memebasetags FOREIGN KEY (idmemebase) REFERENCES public.memebase(id) ON DELETE CASCADE;


--
-- Name: noticia fk1_noticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticia
    ADD CONSTRAINT fk1_noticia FOREIGN KEY (idusuariopublicou) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: noticiamidia fk1_noticiamidia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticiamidia
    ADD CONSTRAINT fk1_noticiamidia FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: removenoticia fk1_remove; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removenoticia
    ADD CONSTRAINT fk1_remove FOREIGN KEY (idmod) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: removememe fk1_removememe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removememe
    ADD CONSTRAINT fk1_removememe FOREIGN KEY (idmod) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: removememebase fk1_removememebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removememebase
    ADD CONSTRAINT fk1_removememebase FOREIGN KEY (idmod) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: removethread fk1_removethread; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removethread
    ADD CONSTRAINT fk1_removethread FOREIGN KEY (idmod) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: threadcomentario fk1_threadcomentario; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.threadcomentario
    ADD CONSTRAINT fk1_threadcomentario FOREIGN KEY (idusuario) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: avaliameme fk2_avaliameme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.avaliameme
    ADD CONSTRAINT fk2_avaliameme FOREIGN KEY (idusuario) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: banusuario fk2_banusuario; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.banusuario
    ADD CONSTRAINT fk2_banusuario FOREIGN KEY (idusuariobanido) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: comentariomeme fk2_comentariomeme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomeme
    ADD CONSTRAINT fk2_comentariomeme FOREIGN KEY (idusuariopublicou) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: comentariomemebase fk2_comentariomemebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomemebase
    ADD CONSTRAINT fk2_comentariomemebase FOREIGN KEY (idmemebase) REFERENCES public.memebase(id) ON DELETE CASCADE;


--
-- Name: edicaomemebase fk2_comentariomemebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edicaomemebase
    ADD CONSTRAINT fk2_comentariomemebase FOREIGN KEY (idmemebase) REFERENCES public.memebase(id) ON DELETE CASCADE;


--
-- Name: comentarionoticia fk2_comentarionoticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentarionoticia
    ADD CONSTRAINT fk2_comentarionoticia FOREIGN KEY (idusuario) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: compoememebase fk2_compoememebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.compoememebase
    ADD CONSTRAINT fk2_compoememebase FOREIGN KEY (idmeme) REFERENCES public.meme(id) ON DELETE CASCADE;


--
-- Name: meme fk2_meme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.meme
    ADD CONSTRAINT fk2_meme FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: memebase fk2_memebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebase
    ADD CONSTRAINT fk2_memebase FOREIGN KEY (usuarioedicao) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: memebasemidia fk2_memebasemidia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebasemidia
    ADD CONSTRAINT fk2_memebasemidia FOREIGN KEY (idmemebase) REFERENCES public.memebase(id) ON DELETE CASCADE;


--
-- Name: noticia fk2_noticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticia
    ADD CONSTRAINT fk2_noticia FOREIGN KEY (thumb) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: noticiamidia fk2_noticiamidia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticiamidia
    ADD CONSTRAINT fk2_noticiamidia FOREIGN KEY (idnoticia) REFERENCES public.noticia(id) ON DELETE CASCADE;


--
-- Name: removememe fk2_removememe; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removememe
    ADD CONSTRAINT fk2_removememe FOREIGN KEY (idmeme) REFERENCES public.meme(id) ON DELETE CASCADE;


--
-- Name: removememebase fk2_removememebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removememebase
    ADD CONSTRAINT fk2_removememebase FOREIGN KEY (idmemebase) REFERENCES public.memebase(id) ON DELETE CASCADE;


--
-- Name: removenoticia fk2_removenoticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removenoticia
    ADD CONSTRAINT fk2_removenoticia FOREIGN KEY (idnoticia) REFERENCES public.noticia(id) ON DELETE CASCADE;


--
-- Name: removethread fk2_removethread; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.removethread
    ADD CONSTRAINT fk2_removethread FOREIGN KEY (idthread) REFERENCES public.thread(id) ON DELETE CASCADE;


--
-- Name: threadcomentario fk2_threadcomentario; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.threadcomentario
    ADD CONSTRAINT fk2_threadcomentario FOREIGN KEY (idthread) REFERENCES public.thread(id) ON DELETE CASCADE;


--
-- Name: comentariomeme fk3_comentariomeme; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomeme
    ADD CONSTRAINT fk3_comentariomeme FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: comentariomemebase fk3_comentariomemebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentariomemebase
    ADD CONSTRAINT fk3_comentariomemebase FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: comentarionoticia fk3_comentarionoticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.comentarionoticia
    ADD CONSTRAINT fk3_comentarionoticia FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: memebase fk3_memebase; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memebase
    ADD CONSTRAINT fk3_memebase FOREIGN KEY (idusuariopublicou) REFERENCES public.usuario(id) ON DELETE CASCADE;


--
-- Name: threadcomentario fk3_threadcomentaio; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.threadcomentario
    ADD CONSTRAINT fk3_threadcomentaio FOREIGN KEY (idmidia) REFERENCES public.midia(id) ON DELETE CASCADE;


--
-- Name: memetags fk_memetags; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.memetags
    ADD CONSTRAINT fk_memetags FOREIGN KEY (idmeme) REFERENCES public.meme(id) ON DELETE CASCADE;


--
-- Name: noticiatags fk_noticia; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.noticiatags
    ADD CONSTRAINT fk_noticia FOREIGN KEY (idnoticia) REFERENCES public.noticia(id) ON DELETE CASCADE;


--
-- Name: threadtags fk_threadtags; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.threadtags
    ADD CONSTRAINT fk_threadtags FOREIGN KEY (idthread) REFERENCES public.thread(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

